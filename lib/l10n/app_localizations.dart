import 'package:flutter/material.dart';

class AppLocalizations {
  final Locale locale;

  AppLocalizations(this.locale);

  static AppLocalizations? of(BuildContext context) {
    return Localizations.of<AppLocalizations>(context, AppLocalizations);
  }

  static const LocalizationsDelegate<AppLocalizations> delegate =
      _AppLocalizationsDelegate();

  static const List<Locale> supportedLocales = [
    Locale('vi', 'VN'), // Ti·∫øng Vi·ªát
    Locale('en', 'US'), // English
  ];

  // App name & general
  String get appName => locale.languageCode == 'vi' ? 'Asia Green' : 'Asia Green';
  String get welcome => locale.languageCode == 'vi' ? 'Xin ch√†o!' : 'Welcome!';
  String get slogan => locale.languageCode == 'vi' 
      ? 'M·ªói h√†nh ƒë·ªông nh·ªè, thay ƒë·ªïi l·ªõn!' 
      : 'Small actions, big changes!';

  // Navigation
  String get learn => locale.languageCode == 'vi' ? 'H·ªçc' : 'Learn';
  String get quiz => locale.languageCode == 'vi' ? 'Ki·ªÉm tra' : 'Quiz';
  String get games => locale.languageCode == 'vi' ? 'Tr√≤ ch∆°i' : 'Games';
  String get challenges => locale.languageCode == 'vi' ? 'Th·ª≠ th√°ch' : 'Challenges';

  // Dashboard
  String get yourLevel => locale.languageCode == 'vi' ? 'C·∫•p ƒë·ªô c·ªßa b·∫°n' : 'Your Level';
  String get greenPoints => locale.languageCode == 'vi' ? 'ƒêi·ªÉm xanh' : 'Green Points';
  String get completedLessons => locale.languageCode == 'vi' ? 'B√†i h·ªçc ho√†n th√†nh' : 'Completed Lessons';
  String get completedChallenges => locale.languageCode == 'vi' ? 'Th·ª≠ th√°ch ho√†n th√†nh' : 'Completed Challenges';
  String get quickActions => locale.languageCode == 'vi' ? 'Truy c·∫≠p nhanh' : 'Quick Actions';
  String get motivation => locale.languageCode == 'vi' ? 'ƒê·ªông l·ª±c' : 'Motivation';

  // Levels
  String get levelBeginner => locale.languageCode == 'vi' ? 'Ng∆∞·ªùi m·ªõi' : 'Beginner';
  String get levelGreenHouse => locale.languageCode == 'vi' ? 'Nh√† Xanh' : 'Green House';
  String get levelEcoAmbassador => locale.languageCode == 'vi' ? 'ƒê·∫°i s·ª© M√¥i tr∆∞·ªùng' : 'Eco Ambassador';

  // Lessons
  String get lessons => locale.languageCode == 'vi' ? 'B√†i h·ªçc' : 'Lessons';
  String get allCategories => locale.languageCode == 'vi' ? 'T·∫•t c·∫£' : 'All';
  String get water => locale.languageCode == 'vi' ? 'N∆∞·ªõc' : 'Water';
  String get waste => locale.languageCode == 'vi' ? 'R√°c th·∫£i' : 'Waste';
  String get energy => locale.languageCode == 'vi' ? 'NƒÉng l∆∞·ª£ng' : 'Energy';
  String get climate => locale.languageCode == 'vi' ? 'Kh√≠ h·∫≠u' : 'Climate';
  String get nature => locale.languageCode == 'vi' ? 'Thi√™n nhi√™n' : 'Nature';
  String get readMore => locale.languageCode == 'vi' ? 'ƒê·ªçc th√™m' : 'Read more';
  String get quickSummary => locale.languageCode == 'vi' ? 'T√≥m t·∫Øt nhanh' : 'Quick Summary';
  String get listen => locale.languageCode == 'vi' ? 'Nghe' : 'Listen';
  String get pause => locale.languageCode == 'vi' ? 'T·∫°m d·ª´ng' : 'Pause';

  // Quiz
  String get quizzes => locale.languageCode == 'vi' ? 'Ki·ªÉm tra' : 'Quizzes';
  String get questions => locale.languageCode == 'vi' ? 'c√¢u h·ªèi' : 'questions';
  String get startQuiz => locale.languageCode == 'vi' ? 'B·∫Øt ƒë·∫ßu' : 'Start Quiz';
  String get next => locale.languageCode == 'vi' ? 'Ti·∫øp theo' : 'Next';
  String get submit => locale.languageCode == 'vi' ? 'N·ªôp b√†i' : 'Submit';
  String get yourScore => locale.languageCode == 'vi' ? 'ƒêi·ªÉm c·ªßa b·∫°n' : 'Your Score';
  String get correct => locale.languageCode == 'vi' ? 'ƒê√∫ng' : 'Correct';
  String get incorrect => locale.languageCode == 'vi' ? 'Sai' : 'Incorrect';
  String get explanation => locale.languageCode == 'vi' ? 'Gi·∫£i th√≠ch' : 'Explanation';
  String get tryAgain => locale.languageCode == 'vi' ? 'Th·ª≠ l·∫°i' : 'Try Again';
  String get backToList => locale.languageCode == 'vi' ? 'V·ªÅ danh s√°ch' : 'Back to List';

  // Games
  String get educationalGames => locale.languageCode == 'vi' ? 'Tr√≤ ch∆°i Gi√°o d·ª•c' : 'Educational Games';
  String get highScore => locale.languageCode == 'vi' ? 'K·ª∑ l·ª•c' : 'High Score';
  String get score => locale.languageCode == 'vi' ? 'ƒêi·ªÉm' : 'Score';
  String get level => locale.languageCode == 'vi' ? 'Level' : 'Level';
  String get timeLeft => locale.languageCode == 'vi' ? 'Th·ªùi gian' : 'Time';
  String get gameOver => locale.languageCode == 'vi' ? 'K·∫øt th√∫c' : 'Game Over';
  String get playAgain => locale.languageCode == 'vi' ? 'Ch∆°i l·∫°i' : 'Play Again';
  String get exit => locale.languageCode == 'vi' ? 'Tho√°t' : 'Exit';

  // Challenges
  String get greenChallenges => locale.languageCode == 'vi' ? 'Th·ª≠ th√°ch Xanh' : 'Green Challenges';
  String get points => locale.languageCode == 'vi' ? 'ƒëi·ªÉm' : 'points';
  String get complete => locale.languageCode == 'vi' ? 'Ho√†n th√†nh' : 'Complete';
  String get completed => locale.languageCode == 'vi' ? 'ƒê√£ ho√†n th√†nh' : 'Completed';
  String get earnedPoints => locale.languageCode == 'vi' ? 'ƒêi·ªÉm ƒë·∫°t ƒë∆∞·ª£c' : 'Earned Points';

  // Settings & Others
  String get settings => locale.languageCode == 'vi' ? 'C√†i ƒë·∫∑t' : 'Settings';
  String get language => locale.languageCode == 'vi' ? 'Ng√¥n ng·ªØ' : 'Language';
  String get theme => locale.languageCode == 'vi' ? 'Giao di·ªán' : 'Theme';
  String get light => locale.languageCode == 'vi' ? 'S√°ng' : 'Light';
  String get dark => locale.languageCode == 'vi' ? 'T·ªëi' : 'Dark';
  String get system => locale.languageCode == 'vi' ? 'H·ªá th·ªëng' : 'System';
  String get about => locale.languageCode == 'vi' ? 'Gi·ªõi thi·ªáu' : 'About';
  String get version => locale.languageCode == 'vi' ? 'Phi√™n b·∫£n' : 'Version';

  // Motivational messages
  List<String> get motivationalMessages => locale.languageCode == 'vi' 
      ? [
          'B·∫°n ƒëang l√†m r·∫•t t·ªët! üå±',
          'M·ªói b∆∞·ªõc nh·ªè ƒë·ªÅu quan tr·ªçng! üåç',
          'C·∫£m ∆°n v√¨ ƒë√£ b·∫£o v·ªá Tr√°i ƒê·∫•t! üíö',
          'B·∫°n l√† ng∆∞·ªùi h√πng m√¥i tr∆∞·ªùng! ü¶∏',
          'Ti·∫øp t·ª•c ph√°t huy nh√©! ‚≠ê',
        ]
      : [
          'You\'re doing great! üå±',
          'Every small step matters! üåç',
          'Thanks for protecting Earth! üíö',
          'You\'re an eco hero! ü¶∏',
          'Keep up the good work! ‚≠ê',
        ];

  // Common
  String get yes => locale.languageCode == 'vi' ? 'C√≥' : 'Yes';
  String get no => locale.languageCode == 'vi' ? 'Kh√¥ng' : 'No';
  String get ok => locale.languageCode == 'vi' ? 'OK' : 'OK';
  String get cancel => locale.languageCode == 'vi' ? 'H·ªßy' : 'Cancel';
  String get loading => locale.languageCode == 'vi' ? 'ƒêang t·∫£i...' : 'Loading...';
  String get error => locale.languageCode == 'vi' ? 'L·ªói' : 'Error';
  String get success => locale.languageCode == 'vi' ? 'Th√†nh c√¥ng' : 'Success';
}

class _AppLocalizationsDelegate extends LocalizationsDelegate<AppLocalizations> {
  const _AppLocalizationsDelegate();

  @override
  bool isSupported(Locale locale) {
    return ['vi', 'en'].contains(locale.languageCode);
  }

  @override
  Future<AppLocalizations> load(Locale locale) async {
    return AppLocalizations(locale);
  }

  @override
  bool shouldReload(_AppLocalizationsDelegate old) => false;
}
